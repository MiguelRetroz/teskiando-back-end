{
  "openapi": "3.0.3",
  "info": {
    "title": "Téskiando Api",
    "description": "Api do app Téskiando, que tem como objetivo ajudar usuários a gerenciar tarefas de maneira fácil e rápida.",
    "contact": {
      "email": "contato.miguelretroz@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://teskiando-api.herokuapp.com",
      "description": "Produção"
    },
    {
      "url": "http://localhost:3001",
      "description": "Local"
    }
  ],
  "schemas": ["https", "http"],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Teste de conexão com o servidor",
        "description": "Rota para testar a conexão com o servidor",
        "tags": ["Ping"],
        "responses": {
          "200": {
            "description": "Pong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Ping/200"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "summary": "Registro de usuário",
        "description": "Rota para registro novos usuários",
        "tags": ["User"],
        "requestBody": {
          "$ref": "#/components/requestBodies/User/Register"
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "409": {
            "description": "Email já registrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/User/Register/409"
                }
              }
            }
          },
          "422": {
            "description": "Erros de validação do body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/User/Register/422"
                },
                "examples": {
                  "Nome é obrigatório": {
                    "value": {
                      "message": "Nome é obrigatório"
                    }
                  },
                  "Nome deve ter 3 ou mais caracteres": {
                    "value": {
                      "message": "Nome deve ter 3 ou mais caracteres"
                    }
                  },
                  "Nome deve ser \"string\"": {
                    "value": {
                      "message": "Nome deve ser \"string\""
                    }
                  },
                  "Email é obrigatório": {
                    "value": {
                      "message": "Email é obrigatório"
                    }
                  },
                  "Email no formato incorreto": {
                    "value": {
                      "message": "Email no formato incorreto"
                    }
                  },
                  "Email deve ser \"string\"": {
                    "value": {
                      "message": "Email deve ser \"string\""
                    }
                  },
                  "Senha é obrigatória": {
                    "value": {
                      "message": "Senha é obrigatória"
                    }
                  },
                  "Senha no formato incorreto": {
                    "value": {
                      "message": "Senha no formato incorreto"
                    }
                  },
                  "Senha deve ser \"string\"": {
                    "value": {
                      "message": "Senha deve ser \"string\""
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login de usuário",
        "description": "Rota para login de usuário",
        "tags": ["User"],
        "requestBody": {
          "$ref": "#/components/requestBodies/User/Login"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/User/Login/200"
          },
          "404": {
            "$ref": "#/components/responses/User/Login/404"
          },
          "422": {
            "$ref": "#/components/responses/User/Login/422"
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/task/register": {
      "post": {
        "summary": "Registro de nova tarefa",
        "description": "Rota para registro de novas tarefas baseado no id do usuário (O id do usuário é pego do token).",
        "tags": ["Task"],
        "security": [
          {
            "accessToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Task/Register"
        },
        "responses": {
          "200": {
            "description": "Tarefa criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Task/401"
          },
          "404": {
            "$ref": "#/components/responses/User/404"
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/task/list": {
      "get": {
        "summary": "Listagem de tarefas do usuário",
        "description": "Rota para listagem das tarefas de um usuário (O id do usuário é pego do token).",
        "tags": ["Task"],
        "security": [
          {
            "accessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tarefas do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Task/401"
          },
          "404": {
            "$ref": "#/components/responses/User/404"
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/task/edit/{taskId}": {
      "put": {
        "summary": "Edição de tarefa",
        "description": "Rota para editação de tarefas",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Id da tarefa a ser editada",
            "required": true,
            "schema": {
              "type": "string",
              "example": "623ed07abb1c59e0ec9f85ae"
            }
          }
        ],
        "tags": ["Task"],
        "security": [
          {
            "accessToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Task/Edit"
        },
        "responses": {
          "200": {
            "description": "Tarefa editada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Task/Modify/401"
          },
          "404": {
            "$ref": "#/components/responses/Task/Modify/404"
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    },
    "/task/remove/{taskId}": {
      "delete": {
        "summary": "Remoção de tarefa",
        "description": "Rota para remoção de tarefas",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Id da tarefa a ser removida",
            "required": true,
            "schema": {
              "type": "string",
              "example": "623ed07abb1c59e0ec9f85ae"
            }
          }
        ],
        "tags": ["Task"],
        "security": [
          {
            "accessToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Tarefa removida com sucesso"
          },
          "401": {
            "$ref": "#/components/responses/Task/Modify/401"
          },
          "404": {
            "$ref": "#/components/responses/Task/Modify/404"
          },
          "500": {
            "$ref": "#/components/responses/Errors/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId",
            "example": "623ed07abb1c59e0ec9f85ae"
          },
          "userId": {
            "type": "string",
            "format": "ObjectId",
            "example": "623ed07abb1c59e0ec9f85ae"
          },
          "title": {
            "type": "string",
            "example": "Comprar pão"
          },
          "status": {
            "type": "string",
            "format": " toDo, inProgress, finished",
            "example": "toDo"
          },
          "description": {
            "type": "string",
            "example": "Comprar pão para o dia de hoje"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-26T19:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-27T12:30:14.710Z"
          }
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT gerado no login do usuário"
      }
    },
    "requestBodies": {
      "User": {
        "Register": {
          "description": "Dados do usuário",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Anakin Skywalker"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "anakin.skywalker@email.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "12345678"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "Login": {
          "description": "Dados do usuário",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "anakin.skywalker@email.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "12345678"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        }
      },
      "Task": {
        "Register": {
          "description": "Dados para registro de nova tarefa",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "required": ["title"]
              },
              "examples": {
                "Apenas título": {
                  "value": {
                    "title": "Comprar pão"
                  }
                }
              }
            }
          }
        },
        "Edit": {
          "description": "Dados para edição de tarefa, é possível alterar o título, descrição e status nesta rota",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "format": " toDo, inProgress, finished"
                  }
                }
              },
              "examples": {
                "Apenas título": {
                  "value": {
                    "title": "Comprar pão"
                  }
                },
                "Apenas descrição": {
                  "value": {
                    "description": "Ir comprar pão na padaria"
                  }
                },
                "Apenas status para \"A fazer\"": {
                  "value": {
                    "status": "toDo"
                  }
                },
                "Apenas status para \"Em progresso\"": {
                  "value": {
                    "status": "inProgress"
                  }
                },
                "Apenas status para \"Concluído\"": {
                  "value": {
                    "status": "finished"
                  }
                },
                "Todos os campos": {
                  "value": {
                    "title": "Comprar pão",
                    "description": "Ir comprar pão na padaria",
                    "status": "inProgress"
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "Ping": {
        "200": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Pong"
            }
          }
        }
      },
      "User": {
        "Register": {
          "409": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Email já registrado"
              }
            }
          },
          "422": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "Login": {
          "200": {
            "description": "Login realizado com sucesso e token gerado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "format": "JWT",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MjNlNjlkMGNkYjY4NTNkMTg0NDcyMzAiLCJuYW1lIjoiQW5ha2luIFNreXdhbGtlciIsImVtYWlsIjoiYW5ha2luLnNreXdhbGtlckBlbWFpbC5jb20iLCJpYXQiOjE2NDgyNjgyNDksImV4cCI6MTY0ODg3MzA0OX0.2ridzyLoA1oPOh-58xYwYqsJzAYv_sA4OjZq4DE7mV4"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário não encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Erros gerados na validação dos dados enviados no body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Email é obrigatório": {
                    "value": {
                      "message": "Email é obrigatório"
                    }
                  },
                  "Email no formato incorreto": {
                    "value": {
                      "message": "Email no formato incorreto"
                    }
                  },
                  "Email deve ser \"string\"": {
                    "value": {
                      "message": "Email deve ser \"string\""
                    }
                  },
                  "Senha é obrigatória": {
                    "value": {
                      "message": "Senha é obrigatória"
                    }
                  },
                  "Senha no formato incorreto": {
                    "value": {
                      "message": "Senha no formato incorreto"
                    }
                  },
                  "Senha deve ser \"string\"": {
                    "value": {
                      "message": "Senha deve ser \"string\""
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Usuário não encontrado",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Usuário não encontrado"
                  }
                }
              }
            }
          }
        }
      },
      "Task": {
        "401": {
          "description": "Erros relacionados a autenticação e autorização do usuário",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Token inválido": {
                  "value": {
                    "message": "Token inválido"
                  }
                },
                "Token expirado": {
                  "value": {
                    "message": "Token expirado"
                  }
                },
                "Token incorreto": {
                  "value": {
                    "message": "Token incorreto"
                  }
                }
              }
            }
          }
        },
        "Modify": {
          "404": {
            "description": "Usuário ou tarefa não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Usuário não encontrado": {
                    "value": {
                      "message": "Usuário não encontrado"
                    }
                  },
                  "Tarefa não encontrada": {
                    "value": {
                      "message": "Tarefa não encontrada"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Erros relacionados a autenticação e autorização do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Token inválido": {
                    "value": {
                      "message": "Token inválido"
                    }
                  },
                  "Token expirado": {
                    "value": {
                      "message": "Token expirado"
                    }
                  },
                  "Token incorreto": {
                    "value": {
                      "message": "Token incorreto"
                    }
                  },
                  "Usuário não autorizado": {
                    "value": {
                      "message": "Usuário não autorizado"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Errors": {
        "500": {
          "description": "Erro interno do servidor",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}